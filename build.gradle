group 'com.panghu'
version '1.0.0'

//构建项目groovy依赖
buildscript {
    repositories {
        mavenCentral()
        maven { url 'http://47.102.99.93:8081/repository/panghu/' }
    }
}

// 所有子项目的通用配置
allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'maven'

    version = '1.0.0'

    // JVM 版本号要求
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    // java编译的时候缺省状态下会因为中文字符而失败
    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

    // 仓库依赖
    repositories {
        mavenCentral()
        maven {
            url 'http://47.102.99.93:8081/repository/panghu/'
            credentials {
                username = "${maven_user}"
                password = "${maven_password}"
            }
        }
    }

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
    //额外自定义属性
    ext {
//        set('springCloudVersion', "Dalston.SR5")
    }

    //通用依赖
    dependencies {
        compile("org.apache.shiro:shiro-core:$shiro_version",
                "org.apache.shiro:shiro-web:$shiro_version",
                "org.apache.shiro:shiro-spring:$shiro_version",
                "org.apache.shiro:shiro-ehcache:$shiro_version"
//                "org.crazycake:shiro-redis:$shiro_version"
        )

        // https://mvnrepository.com/artifact/org.crazycake/shiro-redis
        compile group: 'org.crazycake', name: 'shiro-redis', version: '3.2.3'



        //邮件测试
        compile group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: '2.1.3.RELEASE'
//        compile group: 'org.springframework.boot', name: 'spring-boot-starter-velocity', version: '1.4.7.RELEASE'


        // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-freemarker
        compile group: 'org.springframework.boot', name: 'spring-boot-starter-freemarker', version: '2.2.6.RELEASE'




    }

    //上传jard到nexus
    uploadArchives {
        repositories {
            mavenDeployer {
                repository(url: maven_url) {
                    authentication(userName: maven_user, password: maven_password)
                }
                pom.version = "$project.version"
                pom.artifactId = "$project.name"
                pom.groupId = "$project.group"
            }
        }
        return 'Success'
    }

//    //创建目录
//    task createDirs {
//        doLast {
//            sourceSets*.java.srcDirs*.each {
//                it.mkdirs()
//            }
//            sourceSets*.resources.srcDirs*.each {
//                it.mkdirs()
//            }
//        }
//    }

}

